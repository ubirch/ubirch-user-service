<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- parent pom -->
    <parent>
        <groupId>com.ubirch.user</groupId>
        <artifactId>ubirch-user-service</artifactId>
        <version>1.0.4-SNAPSHOT</version>
    </parent>

    <!-- basic info -->
    <artifactId>server</artifactId>
    <name>${project.artifactId}</name>
    <description>user service specific REST API</description>
    <packaging>jar</packaging>

    <dependencies>

        <!-- USER SERVICE -->
        <dependency>
            <groupId>com.ubirch.user</groupId>
            <artifactId>config</artifactId>
            <version>${user-service-parent.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ubirch.user</groupId>
            <artifactId>core</artifactId>
            <version>${user-service-parent.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ubirch.user</groupId>
            <artifactId>model-rest</artifactId>
            <version>${user-service-parent.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ubirch.user</groupId>
            <artifactId>util</artifactId>
            <version>${user-service-parent.version}</version>
        </dependency>

        <!-- Ubirch -->

        <dependency>
            <groupId>com.ubirch.util</groupId>
            <artifactId>response-util_${scala.compat.version}</artifactId>
            <version>${ubirch-response.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ubirch.util</groupId>
            <artifactId>rest-akka-http_${scala.compat.version}</artifactId>
            <version>${ubirch-rest-akka-http.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ubirch.util</groupId>
            <artifactId>rest-akka-http-test_${scala.compat.version}</artifactId>
            <version>${ubirch-rest-akka-http.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Akka -->

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http_${scala.compat.version}</artifactId>
            <version>${akka-http.version}</version>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-slf4j_${scala.compat.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-stream_${scala.compat.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>

        <plugins>
            <!-- to be able to use scalatest disable surefire (maven test) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <!-- enable scalatest -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>${scalatest-maven-plugin.version}</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <version>${scoverage.plugin.version}</version>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <!-- other parameters -->
                </configuration>
            </plugin>

            <!--         create and/or push the created docker image -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <buildDirectory>${project.build.outputDirectory}</buildDirectory>
                    <repository>ubirch/${project.artifactId}</repository>
                    <tag>${build.number}</tag>
                    <buildArgs>
                        <VERSION>${project.version}</VERSION>
                        <BUILD>${build.number}</BUILD>
                        <SERVICE_NAME>${project.name}</SERVICE_NAME>
                        <JAR_LIBS>target/lib</JAR_LIBS>
                        <JAR_FILE>target/${project.build.finalName}.${project.packaging}</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>

            <!-- copy all dependencies into the target/lib dir for our docker image -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- needed, as model-db shall become deployed and the value for skip is defined as true in the parent pom-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>false</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
