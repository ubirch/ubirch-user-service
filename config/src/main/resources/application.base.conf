akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = DEBUG
  http {
    verbose-error-messages = off
    server {
      idle-timeout = 90s
      request-timeout = 60s
      remote-address-header = on
      # The value of the `Server` header to produce.
      # Set to the empty string to disable rendering of the server header.
      server-header = ubirch-user-service
    }
  }
}

ubirchUserService {

  interface = "localhost"
  port = 8092
  timeout = 15 // seconds

  gopipelinename = "noName"
  gopipelinename = ${?GO_PIPELINE_NAME}
  gopipelinelabel = "noLabel"
  gopipelinelabel = ${?GO_PIPELINE_LABEL}
  gopipelinerev = "noRev"
  gopipelinerev = ${?GO_REVISION_GIT}

  akka {
    actorTimeout = 15 // seconds
    numberOfWorkers = 10
  }

  adminUser {
    providerId = "google"
    providerId = ${?ADMIN_PROVIDER_ID}
    externalId = 1234
    externalId = ${?ADMIN_EXTERNAL_ID}
  }

  testUser.context = ${?TEST_USER_CONTEXT}"-"${?ENV_NAME}

  contextPrefixList = ["ubirch", "trackle"]
  providersWithUsersActivated = ["keycloak", "ubirchToken"]

  mongo {
    host = "localhost"
    host = ${?MONGO_HOST}
    hosts = "mongodb://"${ubirchUserService.mongo.host}":27017/user-service?ssl=false"
    collection {
      context = "context"
      user = "user"
      group = "group"
    }

  }

  retrieveResourceLimit = 2000
  retrieveResourceLimit = ${?RETRIEVE_RESOURCE_LIMIT}
}

ubirch.envid = "ubirch-local"
